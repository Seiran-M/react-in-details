import React, {useState} from 'react';// also exported from '@storybook/react' if you can deal with breaking changes in 6.1import {Story, Meta} from '@storybook/react/types-6-0';import {action} from "@storybook/addon-actions";import {Accordion, AccordionPropsType} from "./Accordion";const GetCategoryObj = (categoryName: 'Color' | 'Event' | 'Main') => ({   table: {      category: categoryName   }})export default {   title: 'components/Accordion',   component: Accordion,   argTypes: {      color: {         control: 'color',         ...GetCategoryObj("Color")      },      onChange: {         ...GetCategoryObj("Event")      },      onClick: {         ...GetCategoryObj("Event")      },      item: {...GetCategoryObj("Main")},      collapsed: {...GetCategoryObj("Main")},      titleValue: {...GetCategoryObj("Main")},   }};const callback = action('accordion mode change event fired')const onClickcallback = action('some item was clicked')const Template: Story<AccordionPropsType> = (args) => <Accordion {...args} />const callbacksProps = {   onChange: callback,   onClick: onClickcallback,}export const MenuCollapsedMode = Template.bind({})MenuCollapsedMode.args = {   ...callbacksProps,   titleValue: "Menu",   collapsed: true,   items: [],}export const UsersUncollapsedMode = Template.bind({})UsersUncollapsedMode.args = {   ...callbacksProps,   titleValue: "Users",   collapsed: false,   items: [      {title: 'Dimych', value: 1},      {title: 'Valera', value: 2},      {title: 'Artem', value: 3},      {title: 'Viktor', value: 4},   ],}export const ModeChanging: Story<AccordionPropsType> = (args) => {   const [value, setValue] = useState<boolean>(true);   return <Accordion {...args} collapsed={value} onChange={() => {setValue(!value)}}/>}ModeChanging.args = {   ...callbacksProps,   titleValue: "Users",   collapsed: false,   items: [      {title: 'Dimych', value: 1},      {title: 'Valera', value: 2},      {title: 'Artem', value: 3},      {title: 'Viktor', value: 4},   ],   onClick: (value) => {      alert(`user width ID ${value} should be happy`)   }}