import React, {useState} from "react";type ItemType = {   title: string   value: any}export type AccordionPropsType = {   titleValue: string   collapsed: boolean   onChange: () => void   /**    * Elements that are showed when accordion is opened(not collapsed)    */   onClick: (value: any) => void   /**    * Callback that is called when any item was clicked    * @param value is value of clicked item    */   items: ItemType[]   /**    * optional color of header text    */   color?: string}export const Accordion: React.FC<AccordionPropsType> = (props) => {   return (      <div>         <AccordionTitle title={props.titleValue}                         color={props.color}                         onChange={props.onChange}/>         {!props.collapsed && <AccordionBody items={props.items} onClick={props.onClick}/>}      </div>   )}type AccordionTitlePropsType = {   title: string   onChange: () => void   color?: string}const AccordionTitle: React.FC<AccordionTitlePropsType> = (props) => {   return (      <h3         style={{color: props.color ? props.color : 'black'}}         onClick={(e) => props.onChange()}>-- {props.title} --</h3>   )}type AccordionBodyPropsType = {   onClick: (value: any) => void   items: ItemType[]}const AccordionBody: React.FC<AccordionBodyPropsType> = (props) => {   return (      <ul>         {props.items.map((i, index) =>            <li onClick={() => {props.onClick(i.value)}} key={index}>{i.title}</li>)}      </ul>   )}